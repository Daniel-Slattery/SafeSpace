{"version":3,"sources":["store.ts","visuals.js","threeJsCanvas.js","App.tsx","index.tsx"],"names":["useStore","create","set","conn","Visuals","canvas","this","scene","THREE","userMeshes","avatar","avatarAnimation","mixers","userId","map","hasEntered","sizes","width","window","innerWidth","height","innerHeight","fov","near","far","camera","orbitControls","OrbitControls","enableDamping","renderer","configRenderer","setDRACOLoader","setGLTFLoader","loadAvatar","textureLoader","loadLandscape","add","cameraIsInitialized","addEventListener","resize","document","onkeydown","onkeyup","e","keyboardControls","gui","GUI","addGUIcontrol","raycaster","fontLoader","welcomeLights","welcomeText","rotateX","Math","PI","position","mouse","enterText","event","x","clientX","y","clientY","enterClickHandler","bind","createWelcomeScreen","setWelcomeLight","createText","setFromCamera","intersectObject","length","console","log","text","size","offsetY","offsetZ","load","font","textGeometry","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","center","textMaterial","textMesh","pointLight","pointLightHelper","intensity","rectLight","lookAt","rectLightHelper","RectAreaLightHelper","min","max","step","goal","temp","carmeraIsInitialized","setFromMatrixPosition","matrixWorld","lerp","initializeCamera","target","offset","z","copy","id","activeUsers","Object","entries","userData","mesh","SkeletonUtils","clone","mixer","timeScale","action","clipAction","play","name","username","remove","getObjectByName","key","type","aspect","updateProjectionMatrix","setSize","setPixelRatio","devicePixelRatio","quaternion","animationStatus","gltfLoader","gltf","animations","children","scale","rotateZ","isLoaded","xhr","loaded","total","error","shadowMap","enabled","dracoLoader","DRACOLoader","setDecoderPath","GLTFLoader","ground","color","carGeometry","carMaterial","side","wheels","i","wheelGeometry","wheelMaterial","emissive","flatShading","wheelMesh","geometry","push","threeJsCanvas","querySelector","visuals","controlModes","sphereUserControl","carControl","helper","ambientLight","socket","io","on","waitUntil","then","emit","hasJoined","joiningUser","newUser","addNewUser","updateUserStates","distances","webId","connState","getState","setState","removeUser","onmousedown","onmouseup","clock","oldElapsedTime","setInterval","elapsedTime","getElapsedTime","deltaTime","update","updateThirdPersonViewPerspective","value","render","tick","App","useEffect","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a2aca224.chunk.js","sourcesContent":["import create from \"zustand\";\n\ntype store = {\n  // activeUsers: any;\n  // userSpecificId: string;\n  // userConnectionGradients: any;\n  // distances: any;\n  conn: any;\n};\n\nconst useStore = create<store>((set) => ({\n  // activeUsers: {},\n  // userSpecificId: '',\n  // userConnectionGradients: {},\n  // distances: {},\n  conn: [],\n}));\n\n// useStore.subscribe(() => {\n//   console.log('new state', useStore.getState());\n// })\n\nexport default useStore;\n","import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { GUI } from \"three/examples/jsm/libs/dat.gui.module\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\";\nimport { RectAreaLightHelper } from \"three/examples/jsm/helpers/RectAreaLightHelper.js\";\nimport gsap from \"gsap\";\n\nexport default class Visuals {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.scene = new THREE.Scene();\n    this.userMeshes = {};\n    this.avatar = {};\n    this.avatarAnimation = {};\n    this.mixers = {};\n    this.userId = \"\";\n    this.map = {};\n    this.hasEntered = false;\n    this.sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n    this.fov = 75;\n    this.near = 0.1;\n    this.far = 1000;\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      this.sizes.width / this.sizes.height,\n      this.near,\n      this.far\n    );\n    this.orbitControls = new OrbitControls(this.camera, this.canvas);\n    this.orbitControls.enableDamping = true;\n    this.renderer = new THREE.WebGLRenderer({ canvas });\n    this.configRenderer();\n    // this.createGround();\n    this.setDRACOLoader();\n    this.setGLTFLoader();\n    this.loadAvatar();\n    this.textureLoader = new THREE.TextureLoader();\n    this.loadLandscape();\n    this.scene.add(this.camera);\n    this.cameraIsInitialized = false;\n    window.addEventListener(\"resize\", () => this.resize());\n    document.onkeydown = document.onkeyup = (e) => this.keyboardControls(e);\n    this.gui = new GUI();\n    this.addGUIcontrol();\n    ///welcome screen stuff\n    this.raycaster = new THREE.Raycaster();\n    this.fontLoader = new THREE.FontLoader();\n    this.welcomeLights = new THREE.Group();\n    this.welcomeText = new THREE.Group();\n    this.welcomeText.rotateX(-Math.PI / 4);\n    this.welcomeText.position.set(0, 75, 25);\n    this.scene.add(this.welcomeLights, this.welcomeText);\n    this.mouse = new THREE.Vector2();\n    this.enterText = null;\n    window.addEventListener(\"mousemove\", (event) => {\n      this.mouse.x = (event.clientX / this.sizes.width) * 2 - 1;\n      this.mouse.y = -(event.clientY / this.sizes.height) * 2 + 1;\n    });\n    window.addEventListener(\"click\", this.enterClickHandler.bind(this), false);\n    this.createWelcomeScreen();\n    ////////\n  }\n  createWelcomeScreen() {\n    this.camera.position.set(0, 100, 50);\n    this.setWelcomeLight();\n    this.createText(\"Welcome\", 2, 0, -5);\n    this.createText(\"to\", 2, -5, -4);\n    this.createText(\"SafeSpace\", 4, -10, -3);\n    this.createText(\"Enter\", 2, -15, 0);\n  }\n  enterClickHandler() {\n    this.raycaster.setFromCamera(this.mouse, this.camera);\n    let isIntersected = this.raycaster.intersectObject(this.enterText);\n    if (isIntersected.length > 0) {\n      console.log(\"Mesh clicked!\");\n      this.hasEntered = true;\n      // this.scene.\n    }\n  }\n  createText(text, size, offsetY, offsetZ) {\n    this.fontLoader.load(\"/fonts/ArkitechStencil_Regular.json\", (font) => {\n      const textGeometry = new THREE.TextGeometry(text, {\n        font,\n        size: size,\n        height: 0.2,\n        curveSegments: 6,\n        bevelEnabled: true,\n        bevelThickness: 0.03,\n        bevelSize: 0.02,\n        bevelOffset: 0,\n        bevelSegments: 4,\n      });\n\n      textGeometry.center();\n      const textMaterial = new THREE.MeshStandardMaterial();\n      const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n      textMesh.position.set(2, 2 + offsetY, 2 + offsetZ);\n      console.log(textMesh);\n      this.welcomeText.add(textMesh);\n      if (text === \"Enter\") {\n        this.enterText = textMesh;\n      }\n    });\n  }\n  setWelcomeLight() {\n    const pointLight = new THREE.PointLight(0xddd23b);\n    const pointLightHelper = new THREE.PointLightHelper(pointLight);\n    pointLight.position.set(0, 25, 0);\n    pointLight.intensity = 3;\n    this.welcomeLights.add(pointLight, pointLightHelper);\n    const rectLight = new THREE.RectAreaLight(0x51a8dd, 2, 10, 10);\n    rectLight.position.set(5, 5, 0);\n    rectLight.lookAt(0, 0, 0);\n    const rectLightHelper = new RectAreaLightHelper(rectLight);\n    this.welcomeLights.add(rectLight, rectLightHelper);\n    this.gui.add(rectLight, \"intensity\").min(0.1).max(10).step(0.001);\n  }\n  addGUIcontrol() {\n    this.gui.add(this.camera.position, \"x\").min(-50).max(50).step(0.1);\n    this.gui.add(this.camera.position, \"y\").min(-50).max(250).step(0.1);\n    this.gui.add(this.camera.position, \"z\").min(-50).max(50).step(0.1);\n  }\n  // updateThirdPersonViewPerspective()\n  initializeCamera() {\n    this.goal = new THREE.Object3D();\n    // this.goal.add(this.userMeshes[this.userId]);\n    this.userMeshes[this.userId].add(this.goal);\n    this.goal.position.set(0.5, 6, 3);\n    this.temp = new THREE.Vector3();\n  }\n  updateThirdPersonViewPerspective() {\n    if (!this.carmeraIsInitialized) {\n      if (this.userMeshes[this.userId]) {\n        this.initializeCamera();\n        this.carmeraIsInitialized = true;\n      } else {\n        return;\n      }\n    } else {\n      this.temp.setFromMatrixPosition(this.goal.matrixWorld);\n      this.camera.position.lerp(this.temp, 0.2);\n      this.camera.lookAt(this.userMeshes[this.userId].position);\n    }\n  }\n  updateAvatarModeCamera(target) {\n    let offset = new THREE.Vector3(\n      target.position.x + 2,\n      target.position.y + 20,\n      target.position.z + 20\n    );\n    this.camera.position.copy(offset);\n    this.camera.lookAt(target.position);\n  }\n  joiningUser(id, activeUsers) {\n    this.userId = id;\n    for (const [userId, userData] of Object.entries(activeUsers)) {\n      if (userId === this.userId) {\n        this.userMeshes[userId] = this.avatar.mesh;\n      } else {\n        this.userMeshes[userId] = SkeletonUtils.clone(this.avatar.mesh);\n        this.userMeshes[userId].mixer = new THREE.AnimationMixer(this.userMeshes[userId]);\n        this.userMeshes[userId].mixer.timeScale = 2;\n        this.userMeshes[userId].action = this.userMeshes[userId].mixer.clipAction(this.avatarAnimation)\n        this.userMeshes[userId].action.play();\n      }\n      this.userMeshes[userId].name = userData.username;\n      this.userMeshes[userId].position.copy(userData.position);\n      this.scene.add(this.userMeshes[userId]);\n    }\n  }\n  removeUser(id) {\n    this.scene.remove(this.scene.getObjectByName(this.userMeshes[id].name));\n    delete this.userMeshes[id];\n  }\n  keyboardControls(e) {\n    if (\n      e.key === \"ArrowUp\" ||\n      e.key === \"ArrowRight\" ||\n      e.key === \"ArrowDown\" ||\n      e.key === \"ArrowLeft\"\n    )\n      this.map[e.key] = e.type === \"keydown\";\n    // console.log(this.map);\n  }\n  resize() {\n    // Update sizes\n    this.sizes.width = window.innerWidth;\n    this.sizes.height = window.innerHeight;\n    // Update camera\n    this.camera.aspect = this.sizes.width / this.sizes.height;\n    this.camera.updateProjectionMatrix();\n    // Update renderer\n    this.renderer.setSize(this.sizes.width, this.sizes.height);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  }\n  updateUserStates(activeUsers) {\n    for (const [userId, userData] of Object.entries(activeUsers)) {\n      if (this.userMeshes[userId]) {\n        this.userMeshes[userId].position.copy(userData.position);\n        this.userMeshes[userId].quaternion.copy(userData.quaternion);\n        this.userMeshes[userId].animationStatus = userData.animationStatus;\n        // add animation status and loop through visuals.usermeshes\n        // this.userMeshes[userId].mixer.update();\n        // console.log('here', this.userMeshes[userId])\n      }\n    }\n  }\n\n  // updateAnimationStates(activeUsers, deltaTime) {\n  //   for (const [userId, userData] of Object.entries(activeUsers)) {\n  //     if (this.userMeshes[userId]) {\n  //       this.userMeshes[userId].mixer.update(deltaTime);\n  //     }\n  //   }\n  // }\n  // updateThirdPersonViewPerspective()\n  // updateThirdPersonViewPerspective() {\n  //   if (this.userMeshes[this.userId]) {\n  //     this.temp.setFromMatrixPosition(this.goal.matrixWorld);\n  //     this.camera.position.lerp(this.temp, 0.2);\n  //     this.camera.lookAt(this.userMeshes[this.userId].position);\n  //   }\n  // }\n  updateAvatarModeCamera(target) {\n    let offset = new THREE.Vector3(\n      target.position.x + 2,\n      target.position.y + 20,\n      target.position.z + 20\n    );\n    this.camera.position.copy(offset);\n    this.camera.lookAt(target.position);\n  }\n\n  addNewUser(id, userData) {\n    let clone = SkeletonUtils.clone(this.avatar.mesh)\n    this.userMeshes[id] = clone;\n    this.scene.add(clone);\n    this.userMeshes[id].name = userData.username;\n    this.userMeshes[id].position.copy(userData.position);\n    this.userMeshes[id].mixer = new THREE.AnimationMixer(clone);\n    this.userMeshes[id].mixer.timeScale = 2;\n    this.userMeshes[id].action = this.userMeshes[id].mixer.clipAction(this.avatarAnimation)\n    this.userMeshes[id].action.play();\n  }\n\n  loadAvatar() {\n    this.gltfLoader.load(\"/models/CesiumMan/CesiumMan.gltf\", (gltf) => {\n      this.avatarAnimation = gltf.animations[0];\n      this.avatar.mesh = gltf.scene.children[0];\n      this.avatar.mixer = new THREE.AnimationMixer(gltf.scene);\n      this.avatar.mixer.timeScale = 2;\n      this.avatar.mesh.mixer = this.avatar.mixer;\n      this.avatar.action = this.avatar.mixer.clipAction(this.avatarAnimation);\n      this.avatar.mesh.scale.set(4, 4, 4);\n      this.avatar.mesh.rotateZ(Math.PI);\n      this.avatar.action.play();\n      this.avatar.isLoaded = true;\n    });\n  }\n  loadLandscape() {\n    this.gltfLoader.load(\n      \"/models/3D-landscape/NatureGradientPack2.glb\",\n      (gltf) => {\n        console.log(gltf, \"gltfff\");\n        gltf.scene.scale.set(17, 17, 17);\n        gltf.scene.children[6].position.y += 0.001;\n        this.scene.add(gltf.scene);\n      },\n      function (xhr) {\n        console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n      },\n      function (error) {\n        console.log(\"An error happened\");\n      }\n    );\n  }\n  configRenderer() {\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.renderer.setSize(this.sizes.width, this.sizes.height);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  }\n  setDRACOLoader() {\n    this.dracoLoader = new DRACOLoader();\n    this.dracoLoader.setDecoderPath(\"/draco/\");\n  }\n  setGLTFLoader() {\n    this.gltfLoader = new GLTFLoader();\n    this.gltfLoader.setDRACOLoader(this.dracoLoader);\n  }\n  createGround() {\n    const ground = new THREE.Mesh(\n      new THREE.PlaneGeometry(100, 100),\n      new THREE.MeshStandardMaterial({ color: 0x222222 })\n    );\n    ground.rotateX(-Math.PI / 2);\n    this.scene.add(ground);\n  }\n  createCarMesh() {\n    const carGeometry = new THREE.BoxGeometry(2, 0.6, 4); // double chasis shape\n    const carMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffff00,\n      side: THREE.DoubleSide,\n    });\n    const carMesh = new THREE.Mesh(carGeometry, carMaterial);\n    return carMesh;\n  }\n  createWheels() {\n    const wheels = [];\n    for (let i = 0; i < 4; i++) {\n      const wheelRadius = 0.3;\n      const wheelGeometry = new THREE.CylinderGeometry(\n        wheelRadius,\n        wheelRadius,\n        0.4,\n        32\n      );\n      const wheelMaterial = new THREE.MeshPhongMaterial({\n        color: 0xd0901d,\n        emissive: 0xaa0000,\n        side: THREE.DoubleSide,\n        flatShading: true,\n      });\n      const wheelMesh = new THREE.Mesh(wheelGeometry, wheelMaterial);\n      wheelMesh.geometry.rotateZ(Math.PI / 2);\n      wheels.push(wheelMesh);\n    }\n    return wheels;\n  }\n  createSphereAvatar() {\n    return new THREE.Mesh(\n      new THREE.SphereGeometry(1),\n      new THREE.MeshStandardMaterial({\n        color: 0xff0000,\n      })\n    );\n  }\n}\n","import * as THREE from \"three\";\nimport { GUI } from \"three/examples/jsm/libs/dat.gui.module\";\nimport useStore from \"./store\";\nimport { io } from \"socket.io-client\";\nimport Visuals from \"./visuals\";\nimport { waitUntil } from \"async-wait-until\";\n\nexport default function threeJsCanvas() {\n  /**\n   * initialise threejs world\n   **/\n  const canvas = document.querySelector(\"#canvas\");\n  const visuals = new Visuals(canvas);\n\n  /*\n   * Misc\n   */\n  let myId = \"\";\n  const controlModes = {\n    sphereUserControl: true,\n    carControl: false,\n  };\n  const gui = new GUI();\n  const helper = new THREE.GridHelper();\n  visuals.scene.add(helper);\n  const ambientLight = new THREE.AmbientLight();\n  visuals.scene.add(ambientLight);\n\n  /**\n   * establish socket connection\n   */\n  // const socket = io(\"http://localhost:3003/physicsNamespace\");\n  const socket = io(\"https://safe-space-webrtc.herokuapp.com/physicsNamespace\");\n\n  socket.on(\"connect\", () => {\n    console.log(\"Welcome to Safe Space\");\n  });\n\n  /**\n   * load player model\n   **/\n  let isLoaded = false;\n  waitUntil(() => visuals.avatar.isLoaded === true).then(() => {\n    isLoaded = true;\n    socket.emit(\"model loaded\");\n  });\n\n  let hasJoined = false;\n  socket.on(\"joined\", (id, activeUsers) => {\n    visuals.joiningUser(id, activeUsers);\n    hasJoined = true;\n  });\n\n  socket.on(\"add new user\", (id, newUser) => visuals.addNewUser(id, newUser));\n\n  socket.on(\"update\", (activeUsers) => {\n    visuals.updateUserStates(activeUsers);\n  });\n  socket.on(\"new distances\", (distances) => {\n    let conn = [];\n    for (const [webId, connState] of Object.entries(distances)) {\n      if (webId && connState > 0) {\n        conn.push(webId);\n      }\n    }\n    let temp = useStore.getState().conn;\n    if (temp.length !== conn.length) useStore.setState({ conn });\n  });\n\n  socket.on(\"removeUser\", (id) => visuals.removeUser(id));\n\n  /************ */\n  let manualControl = false; // make this a click down event to enable orbit controls\n  document.onmousedown = () => (manualControl = true);\n  document.onmouseup = () => (manualControl = false);\n\n  const clock = new THREE.Clock();\n  let oldElapsedTime = 0;\n  const tick = () => {\n    const elapsedTime = clock.getElapsedTime();\n    const deltaTime = elapsedTime - oldElapsedTime;\n    oldElapsedTime = elapsedTime;\n\n    //\n    hasJoined && socket.emit(\"update\", visuals.map, controlModes, deltaTime);\n    //\n\n    // Update controls\n    visuals.orbitControls.update();\n\n    // update camera\n    visuals.hasEntered && visuals.updateThirdPersonViewPerspective();\n\n    // udpate animation\n    // if (isLoaded && (visuals.map.ArrowUp || visuals.map.ArrowDown)) {\n      // visuals.avatar.mixer.update(deltaTime);\n      // console.log(visuals.avatar.mixer)\n    // }\n\n    for (const [key, value] of Object.entries(visuals.userMeshes)) {\n      if (value.animationStatus === 'walking') {\n        console.log(visuals.userMeshes)\n        value.mixer &&\n        value.mixer.update(deltaTime)\n      }\n    }\n\n    // Render\n    visuals.renderer.render(visuals.scene, visuals.camera);\n\n    // Retrieve users distances for connectionGradients\n    // console.log(users)\n\n    // Call tick again on the next frame\n    // window.requestAnimationFrame(tick);\n  };\n\n  // tick();\n\n  setInterval(() => {\n    // window.requestAnimationFrame(tick);\n    tick();\n  }, 50);\n}\n\n// // car\n// const carMesh = visuals.createCarMesh();\n// // inital position\n// carMesh.position.set(0, 0.2, 0);\n// carMesh.quaternion.set(0, 0, 0, 1);\n// visuals.scene.add(carMesh);\n// // car wheels\n// const wheels = visuals.createWheels();\n// for (const wheelMesh of wheels) {\n//   visuals.scene.add(wheelMesh);\n// }\n// socket.on(\"update wheels\", (wheelsState, carState) => {\n//   // console.log(carState.position);\n//   // console.log(map);\n//   carMesh.position.copy(carState.position);\n//   carMesh.quaternion.copy(carState.quaternion);\n//   for (let i = 0; i < wheelsState.length; i++) {\n//     wheels[i].position.copy(wheelsState[i].position);\n//     wheels[i].quaternion.copy(wheelsState[i].quaternion);\n//   }\n// });\n\n// socket.on(\"active users ordered\", (orderedUserList) => {\n//   console.log(orderedUserList);\n// });\n","import React, { useEffect } from \"react\";\nimport threeJsCanvas from \"./threeJsCanvas\";\nimport Signalling from \"./components/VideoContainer/signalling\";\nimport WelcomePage from \"./welcomePage\";\n\nconst App = () => {\n  useEffect(() => {\n    threeJsCanvas();\n    // WelcomePage();\n  }, []);\n\n  return (\n    <div>\n      {/* <Signalling /> */}\n      {/* <canvas id=\"welcomeCanvas\"></canvas> */}\n      <canvas id=\"canvas\"></canvas>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}